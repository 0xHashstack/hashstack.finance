{"version":3,"sources":["pages/borrow.tsx"],"names":["toast","configure","autoClose","Borrow","props","useState","commitBorrowPeriod","setCommitBorrowPeriod","collateralMarket","setCollateralMarket","modal_borrow","setmodal_borrow","isTransactionDone","setIsTransactionDone","loanInputVal","setLoanInputVal","collateralInputVal","setCollateralInputVal","useContext","Web3ModalContext","chainId","account","wrapper","Web3WrapperContext","web3Wrapper","balance","setBalance","handleCollateralChange","e","a","target","value","getMockBep20Instance","balanceOf","SymbolsMap","getCurrentBalnce","BNtoNum","Number","tog_borrow","document","body","classList","add","handleBorrow","_commitBorrowPeriod","_collateralMarket","approve","marketDataOnChain","DecimalsMap","approveTransactionHash","wait","console","log","getLoanInstance","loanRequest","assetID","CommitMap","tx1","tx","onLoanRequested","events","error","GetErrorText","position","POSITION","BOTTOM_RIGHT","closeOnClick","data","_amount","forEach","event","args","loanAmount","toBigInt","amount","success","type","className","onClick","isOpen","toggle","centered","title","sm","id","placeholder","MinimumAmount","onChange","hidden","align","outline","disabled","style","background","border","borderBottom","BorrowInterestRates","float","color","undefined","React","memo"],"mappings":"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","file":"static/js/6.f17a26d6.chunk.js","sourcesContent":["import { useState, useContext } from \"react\";\n\nimport {\n  Col,\n  Button,\n  Form,\n  Input,\n  Modal,\n  Spinner,\n  InputGroup\n} from \"reactstrap\";\nimport { Web3ModalContext } from '../contexts/Web3ModalProvider';\nimport { Web3WrapperContext } from '../contexts/Web3WrapperProvider';\nimport {\n  SymbolsMap, marketDataOnChain, BorrowInterestRates, CommitMap, MinimumAmount,\n} from '../blockchain/constants';\nimport { BNtoNum, GetErrorText } from '../blockchain/utils';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport React from \"react\";\n\ntoast.configure({\n  autoClose: 4000\n});\n\nlet Borrow = (props) => {\n\n  const [commitBorrowPeriod, setCommitBorrowPeriod] = useState();\n  const [collateralMarket, setCollateralMarket] = useState(null);\n  const [modal_borrow, setmodal_borrow] = useState(false);\n  const [isTransactionDone, setIsTransactionDone] = useState(false);\n\n  const [loanInputVal, setLoanInputVal] = useState(0);\n  const [collateralInputVal, setCollateralInputVal] = useState(0);\n\n  const { chainId, account } = useContext(Web3ModalContext);\n  const { web3Wrapper: wrapper } = useContext(Web3WrapperContext);\n  const [balance, setBalance] = useState(null)\n  const [inputVal, setInputVal] = useState(0)\n\n  const handleBorrowChange = (e) => {\n    setCommitBorrowPeriod(e.target.value)\n  }\n\n  const handleCollateralChange = async (e) => {\n    setCollateralMarket(e.target.value)\n\n    const getCurrentBalnce = await wrapper\n      ?.getMockBep20Instance()\n      .balanceOf(SymbolsMap[e.target.value], account)\n\n    setBalance(BNtoNum(Number(getCurrentBalnce)));\n  }\n\n  const handleLoanInputChange = (e) => {\n    setLoanInputVal(Number(e.target.value));\n  }\n\n  const handleCollateralInputChange = (e) => {\n    setCollateralInputVal(Number(e.target.value));\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  }\n\n  const tog_borrow = async () => {\n    setmodal_borrow(!modal_borrow);\n    removeBodyCss();\n\n    const getCurrentBalnce = await wrapper\n      ?.getMockBep20Instance()\n      .balanceOf(SymbolsMap[collateralMarket], account)\n\n    setBalance(BNtoNum(Number(getCurrentBalnce)));\n  }\n\n  const handleMax = () => {\n    if (balance) {\n      setCollateralInputVal(balance);\n    }\n  }\n\n  const handleBorrow = async () => {\n    try {\n      setIsTransactionDone(true);\n      const _commitBorrowPeriod: string | undefined = commitBorrowPeriod;\n      const _collateralMarket: string | undefined = collateralMarket;\n      const approveTransactionHash = await wrapper?.getMockBep20Instance().approve(SymbolsMap[_collateralMarket], collateralInputVal, marketDataOnChain[chainId].DecimalsMap[_collateralMarket]);\n      await approveTransactionHash.wait();\n      console.log(\"Approve Transaction sent: \", approveTransactionHash);\n      const tx1 = await wrapper?.getLoanInstance().loanRequest(SymbolsMap[props.assetID], CommitMap[_commitBorrowPeriod], loanInputVal, marketDataOnChain[chainId].DecimalsMap[props.assetID],\n        SymbolsMap[_collateralMarket], collateralInputVal, marketDataOnChain[chainId].DecimalsMap[_collateralMarket]);\n      const tx = await tx1.wait();\n      onLoanRequested(tx.events, loanInputVal);\n    } catch (err) {\n      setIsTransactionDone(false);\n      toast.error(`${GetErrorText(err)}`, { position: toast.POSITION.BOTTOM_RIGHT, closeOnClick: true });\n    }\n  }\n\n  const onLoanRequested = (data, loanInputVal) => {\n    let eventName\n    let _amount\n    data.forEach(e => {\n      if (e.event == \"NewLoan\") {\n        eventName = e.event\n        _amount = e.args.loanAmount.toBigInt()\n\n      }\n    })\n\n    let amount = BNtoNum(_amount, 8)\n    setIsTransactionDone(false);\n    //\n    toast.success(`Requested amount: ${amount === \"NaN\" ? loanInputVal : amount}`, { position: toast.POSITION.BOTTOM_RIGHT, closeOnClick: true });\n  }\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"btn btn-secondary btn-sm w-xs\"\n        onClick={() => {\n          tog_borrow();\n        }}\n      >\n        Borrow\n      </button>\n      <Modal\n        isOpen={modal_borrow}\n        toggle={() => {\n          tog_borrow();\n        }}\n        centered\n      >\n        <div className=\"modal-body\">\n          {account ?\n            <Form>\n              <div className=\"row mb-4\">\n                <h6>{props.title}</h6>\n              </div>\n              <div className=\"row mb-4\">\n                <Col sm={12}>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"horizontal-password-Input\"\n                    placeholder={`Minimum amount = ${MinimumAmount[props.assetID]}`}\n                    onChange={handleLoanInputChange}\n                  />\n                </Col>\n              </div>\n              <div className=\"row mb-4\">\n                <Col sm={12}>\n                  <select className=\"form-select\" placeholder=\"Commitment\" onChange={handleBorrowChange}>\n                    <option hidden>Commitment</option>\n                    <option value={\"NONE\"}>None</option>\n                    <option value={\"ONEMONTH\"}>One Month</option>\n                  </select>\n                </Col>\n              </div>\n              <div className=\"row mb-4\">\n                <Col sm={8}>\n                  <h6>Collateral</h6>\n                </Col>\n                <Col sm={4} >\n                  {collateralMarket && <div align=\"right\"> Balance : {balance !== \"NaN\" ? balance : \" Loading\"}</div>}\n                </Col>\n              </div>\n              <div className=\"row mb-4\">\n                <Col sm={12}>\n                  <select className=\"form-select\" onChange={handleCollateralChange}>\n                    <option hidden>Collateral market</option>\n                    <option value={\"USDT\"}>USDT</option>\n                    <option value={\"USDC\"}>USDC</option>\n                    <option value={\"BTC\"}>BTC</option>\n                    <option value={\"BNB\"}>BNB</option>\n                  </select>\n                </Col>\n              </div>\n              <div className=\"row mb-4\">\n                <Col sm={12}>\n                  <InputGroup>\n                    <Input\n                      type=\"number\"\n                      className=\"form-control\"\n                      id=\"amount\"\n                      placeholder=\"Amount\"\n                      onChange={handleCollateralInputChange}\n                      value={collateralInputVal !== 0 ? collateralInputVal : \"Amount\"}\n                    />\n                    {collateralMarket && <Button\n                      outline\n                      type=\"button\"\n                      className=\"btn btn-md w-xs\"\n                      onClick={handleMax}\n                      disabled={balance ? false : true}\n                      style={{ background: \"#2e3444\", border: \"#2e3444\" }}\n                    >\n                      <span style={{ borderBottom: \"2px dotted #fff\" }}>Max</span>\n                    </Button>\n                    }\n                  </InputGroup>\n                </Col>\n              </div>\n              <div className=\"row mb-4\">\n                <Col sm={6}>\n                  <p>Borrow APR <strong>{BorrowInterestRates[commitBorrowPeriod || \"NONE\"] || '15%'}</strong></p>\n                </Col>\n                <Col sm={6}>\n                  <p style={{ float: \"right\" }}>Collateral APY <strong>0%</strong></p>\n                </Col>\n              </div>\n\n              <div className=\"d-grid gap-2\">\n                <Button\n                  color=\"primary\"\n                  className=\"w-md\"\n                  disabled={commitBorrowPeriod === undefined || isTransactionDone}\n                  onClick={handleBorrow}\n                >\n                  {!isTransactionDone ? 'Request Loan' : <Spinner>Loading...</Spinner>}\n                </Button>\n              </div>\n            </Form>\n            : <h2>Please connect your wallet</h2>}\n        </div>\n      </Modal>\n    </>\n  )\n}\n\n\nexport default Borrow = React.memo(Borrow);\n"],"sourceRoot":""}