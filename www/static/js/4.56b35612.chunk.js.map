{"version":3,"sources":["components/layout/index.tsx"],"names":["Header","loadable","Footer","toast","configure","Layout","props","dispatch","useDispatch","useContext","Web3ModalContext","connect","disconnect","account","useState","isWhiteListedAccount","setIsWhiteListedAccount","isWhiteListedAccountRequested","setIsWhiteListedAccountRequested","isResponse","setIsResponse","isTransactionDone","setIsTransactionDone","counter","setCounter","useEffect","timer","changePreloader","axios","get","then","res","data","setTimeout","catch","err","console","log","clearTimeout","handleConnectWallet","useCallback","handleDisconnectWallet","useSelector","state","topbarTheme","layoutWidth","isPreloader","showRightSidebar","changeLayout","document","getElementById","style","display","changeTopbarTheme","handleAccountWhitelist","post","address","whiteListed","Fragment","id","className","marginTop","lg","color","outline","onClick","href","rel","target","src","loading","alt","children","disabled"],"mappings":"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","file":"static/js/4.56b35612.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext, useCallback } from \"react\"\nimport PropTypes from \"prop-types\"\nimport axios from \"axios\"\nimport { Button, Container, Row, Col, Spinner } from \"reactstrap\"\n\n//actions\nimport {\n  changeLayout,\n  changeTopbarTheme,\n  changeLayoutWidth,\n  showRightSidebarAction,\n  changePreloader,\n} from \"../../store/actions\"\n\n//redux\nimport { useSelector, useDispatch } from \"react-redux\"\n\n//components\nimport loadable from \"@loadable/component\"\nconst Header = loadable(() => import(\"./Header\"))\nconst Footer = loadable(() => import(\"./Footer\"))\n\nimport { Web3ModalContext } from \"../../contexts/Web3ModalProvider\"\n\nimport { toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport \"./index.scss\"\n\ntoast.configure()\n\nconst Layout = props => {\n  const dispatch = useDispatch()\n\n  const { connect, disconnect, account } = useContext(Web3ModalContext)\n  const [isWhiteListedAccount, setIsWhiteListedAccount] = useState(true)\n  const [isWhiteListedAccountRequested, setIsWhiteListedAccountRequested] =\n    useState(false)\n  const [isResponse, setIsResponse] = useState(false)\n  const [isTransactionDone, setIsTransactionDone] = useState(false)\n  const [counter, setCounter] = useState()\n\n  useEffect(() => {\n    dispatch(changePreloader(true))\n    setIsResponse(false)\n    let timer\n    if (account) {\n      axios\n        .get(`isWhiteListedAccount?address=${account}`)\n        .then(res => {\n          dispatch(changePreloader(true))\n\n          dispatch(changePreloader(true))\n          setIsWhiteListedAccountRequested(true)\n          setIsWhiteListedAccount(true)\n          setCounter(res.data[\"waitlist_ct\"])\n          timer = setTimeout(() => {\n            dispatch(changePreloader(false))\n          }, 300)\n          setIsResponse(true)\n          setIsTransactionDone(false)\n        })\n        .catch(err => {\n          setIsResponse(true)\n           setIsWhiteListedAccount(true);\n          console.log(\"Error\", err)\n        })\n    }\n    return () => clearTimeout(timer)\n  }, [account])\n\n  const handleConnectWallet = useCallback(() => {\n    setIsTransactionDone(true)\n    connect()\n    setIsTransactionDone(false)\n  }, [connect])\n\n  const handleDisconnectWallet = useCallback(() => {\n    disconnect()\n  }, [disconnect])\n\n  const { topbarTheme, layoutWidth, isPreloader } = useSelector(\n    (state: any) => ({\n      topbarTheme: state.Layout.topbarTheme,\n      layoutWidth: state.Layout.layoutWidth,\n      isPreloader: state.Layout.isPreloader,\n      showRightSidebar: state.Layout.showRightSidebar,\n    })\n  )\n\n  //hides right sidebar on body click\n  // const hideRightbar = (event) => {\n  //   var rightbar = document.getElementById(\"right-bar\");\n  //   //if clicked in inside right bar, then do nothing\n  //   if (rightbar && rightbar.contains(event.target)) {\n  //     return;\n  //   } else {\n  //     //if clicked in outside of rightbar then fire action for hide rightbar\n  //     dispatch(showRightSidebarAction(false));\n  //   }\n  // };\n\n  /*\n  layout settings\n  */\n  useEffect(() => {\n    dispatch(changeLayout(\"horizontal\"))\n  }, [dispatch])\n\n  useEffect(() => {\n    //init body click event fot toggle rightbar\n\n    // document.body.addEventListener(\"click\", hideRightbar, true);\n    let timer\n    if (isPreloader === true) {\n      document.getElementById(\"preloader\").style.display = \"block\"\n      document.getElementById(\"status\").style.display = \"block\"\n\n      timer = setTimeout(function () {\n        document.getElementById(\"preloader\").style.display = \"none\"\n        document.getElementById(\"status\").style.display = \"none\"\n      }, 3000)\n    } else {\n      document.getElementById(\"preloader\").style.display = \"none\"\n      document.getElementById(\"status\").style.display = \"none\"\n    }\n    return () => clearTimeout(timer)\n  }, [isPreloader])\n\n  useEffect(() => {\n    if (topbarTheme) {\n      dispatch(changeTopbarTheme(topbarTheme))\n    }\n  }, [dispatch, topbarTheme])\n\n  // useEffect(() => {\n  //   if (layoutWidth) {\n  //     dispatch(changeLayoutWidth(layoutWidth));\n  //   }\n  // }, [dispatch, layoutWidth]);\n\n  const handleAccountWhitelist = () => {\n    axios\n      .post(`addAccount`, {\n        address: account,\n        whiteListed: true,\n      })\n      .then(res => {\n        if (res.data) {\n          setCounter(res.data.data[\"waitlist_ct\"])\n          setIsWhiteListedAccountRequested(true)\n          setIsWhiteListedAccount(true)\n        }\n      })\n      .catch(err => {\n        console.log(\"Error\", err)\n      })\n  }\n\n  function switchScreens() {\n    if (!account) {\n      return (\n        <Container>\n          <Row style={{ marginTop: \"25ch\" }}>\n            <Col lg=\"12\">\n              <div className=\"text-center mb-5\">\n                <h4 className=\"font-weight-medium\">\n                  Welcome to Hashstack&apos;s public testnet\n                </h4>\n                <div className=\"mt-5 text-center\">\n                  <Button\n                    color=\"dark\"\n                    outline\n                    className=\"btn-outline\"\n                    disabled={isTransactionDone}\n                    onClick={handleConnectWallet}\n                  >\n                    {!isTransactionDone ? (\n                      \"Connect Wallet\"\n                    ) : (\n                      <Spinner>Loading...</Spinner>\n                    )}\n                  </Button>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      )\n    } else if (\n      account &&\n      isResponse &&\n      !isWhiteListedAccount &&\n      !isWhiteListedAccountRequested\n    ) {\n      return (\n        <Container>\n          <Row style={{ marginTop: \"25ch\" }}>\n            <Col lg=\"12\">\n              <div className=\"text-center mb-5\">\n                <h4 className=\"font-weight-medium\">Uh, oh!</h4>\n                <h4 className=\"font-weight-medium\">\n                  It appears though you are not whitelisted. You can request for\n                  whitelist from below\n                </h4>\n                <div className=\"mt-3 text-center\">\n                  <Button\n                    color=\"dark\"\n                    outline\n                    className=\"btn-outline\"\n                    onClick={handleAccountWhitelist}\n                  >\n                    Request to Whitelist\n                  </Button>\n                  <div className=\"w-layout-grid-s footer-socials-s\">\n                    <a\n                      href=\"https://twitter.com/0xhashstack\"\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                      className=\"w-inline-block-s\"\n                    >\n                      <img\n                        src=\"./images/Twitter-Icon-Fill.svg\"\n                        loading=\"lazy\"\n                        alt=\"\"\n                      />\n                    </a>\n                    <a\n                      href=\"https://in.linkedin.com/company/0xhashstack\"\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                      className=\"w-inline-block-s\"\n                    >\n                      <img\n                        src=\"./images/Linkedin-Icon-Fill.svg\"\n                        loading=\"lazy\"\n                        alt=\"\"\n                      />\n                    </a>\n                    <a\n                      href=\"https://github.com/0xHashstack\"\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                      className=\"w-inline-block-s\"\n                    >\n                      <img src=\"./images/github.svg\" loading=\"lazy\" alt=\"\" />\n                    </a>\n                    <a\n                      href=\"http://hashstack.community\"\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                      className=\"w-inline-block-s\"\n                    >\n                      <img src=\"./images/discord.svg\" loading=\"lazy\" alt=\"\" />\n                    </a>\n                    <a\n                      href=\"https://hashstack.medium.com/\"\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                      className=\"w-inline-block-s\"\n                    >\n                      <img src=\"./images/medium.svg\" loading=\"lazy\" alt=\"\" />\n                    </a>\n                    <a\n                      href=\"https://www.reddit.com/r/0xHashstack/\"\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                      className=\"w-inline-block-s\"\n                    >\n                      <img src=\"./images/reddit.svg\" loading=\"lazy\" alt=\"\" />\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      )\n    } else if (\n      account &&\n      !isWhiteListedAccount &&\n      isWhiteListedAccountRequested\n    ) {\n      return (\n        <Container>\n          <Row style={{ marginTop: \"25ch\" }}>\n            <Col lg=\"12\">\n              <div className=\"text-center mb-5\">\n                <h4 className=\"font-weight-medium\">\n                  Congratulations! Request sent Successfully.\n                </h4>\n                <h4 className=\"font-weight-medium\">\n                  Your account will be whitelisted after {counter} requests.{\" \"}\n                </h4>\n                <div className=\"mt-3 text-center\">\n                  <Button\n                    color=\"dark\"\n                    outline\n                    className=\"btn-outline\"\n                    onClick={handleDisconnectWallet}\n                  >\n                    Disconnect\n                  </Button>\n                  <div className=\"w-layout-grid-s footer-socials-s\">\n                    <a\n                      href=\"https://twitter.com/0xhashstack\"\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                      className=\"w-inline-block-s\"\n                    >\n                      <img\n                        src=\"./images/Twitter-Icon-Fill.svg\"\n                        loading=\"lazy\"\n                        alt=\"\"\n                      />\n                    </a>\n                    <a\n                      href=\"https://in.linkedin.com/company/0xhashstack\"\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                      className=\"w-inline-block-s\"\n                    >\n                      <img\n                        src=\"./images/Linkedin-Icon-Fill.svg\"\n                        loading=\"lazy\"\n                        alt=\"\"\n                      />\n                    </a>\n                    <a\n                      href=\"https://github.com/0xHashstack\"\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                      className=\"w-inline-block-s\"\n                    >\n                      <img src=\"./images/github.svg\" loading=\"lazy\" alt=\"\" />\n                    </a>\n                    <a\n                      href=\"http://hashstack.community\"\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                      className=\"w-inline-block-s\"\n                    >\n                      <img src=\"./images/discord.svg\" loading=\"lazy\" alt=\"\" />\n                    </a>\n                    <a\n                      href=\"https://hashstack.medium.com/\"\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                      className=\"w-inline-block-s\"\n                    >\n                      <img src=\"./images/medium.svg\" loading=\"lazy\" alt=\"\" />\n                    </a>\n                    <a\n                      href=\"https://www.reddit.com/r/0xHashstack/\"\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                      className=\"w-inline-block-s\"\n                    >\n                      <img src=\"./images/reddit.svg\" loading=\"lazy\" alt=\"\" />\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      )\n    } else if (account && isWhiteListedAccount) {\n      return (\n        <div id=\"layout-wrapper\">\n          <Header />\n          <div className=\"main-content\">{props.children}</div>\n          <Footer />\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div id=\"preloader\">\n        <div id=\"status\">\n          <div className=\"spinner-chase\">\n            <div className=\"chase-dot\" />\n            <div className=\"chase-dot\" />\n            <div className=\"chase-dot\" />\n            <div className=\"chase-dot\" />\n            <div className=\"chase-dot\" />\n            <div className=\"chase-dot\" />\n          </div>\n        </div>\n      </div>\n\n      {switchScreens()}\n    </React.Fragment>\n  )\n}\n\nLayout.propTypes = {\n  changeLayout: PropTypes.func /*  */,\n  changeLayoutWidth: PropTypes.func,\n  changeTopbarTheme: PropTypes.func,\n  children: PropTypes.object,\n  isPreloader: PropTypes.any,\n  layoutWidth: PropTypes.any,\n  location: PropTypes.object,\n  showRightSidebar: PropTypes.any,\n  topbarTheme: PropTypes.any,\n}\n\nexport default Layout\n"],"sourceRoot":""}